{"ast":null,"code":"var _jsxFileName = \"/home/thary/Desktop/projetos/byne/front-end/src/components/Acoes.jsx\";\nimport React, { Component, useState } from 'react';\nimport Acao from './Acao';\n\nfunction Acoes() {\n  const webSocket = new WebSocket('ws://localhost:8080');\n  const [stockData, setStockData] = useState([]);\n\n  webSocket.onmessage = function (event) {\n    console.log('>>', JSON.parse(event.data));\n    var data = JSON.parse(event.data);\n    setStockData(data.stocksData);\n    console.log('>stocksData>', stocksData);\n  };\n  /* constructor(props) {\n     const webSocket = new WebSocket('ws://localhost:8080');\n     webSocket.onmessage = function (event) {\n       console.log('>>', JSON.parse(event.data));\n       var data = JSON.parse(event.data)\n       /*this.stocksData = data.stocksData\n       console.log('>stocksData>', this.stocksData);\n      }\n     super(props);\n     this.state = {\n       stocksData: []\n     }\n   };*/\n\n  /* componentDidMount() {\n     const webSocket = new WebSocket('ws://localhost:8080');\n  console.log('this', this)\n     webSocket.onopen = function (event) {\n       console.log('WebSocket Client Connected');\n       console.log('webSocket', event)\n        webSocket.onmessage = function (event) {\n         console.log('>>', JSON.parse(event.data));\n         const data = JSON.parse(event.data)\n         this.setState({stockData: data.stocksData})\n         console.log('>stocksData>', this.stocksData);\n        }\n      };\n   }*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default Acoes;\n/*export default props => {\n  const webSocket = new WebSocket('ws://localhost:8080');\n  var stocksData = []\n  console.log('wss', webSocket)\n\n  webSocket.onopen = function (event) {\n    console.log('WebSocket Client Connected');\n    console.log('webSocket', event)\n\n    webSocket.onmessage = function (event) {\n      console.log('>>', JSON.parse(event.data));\n      const data = JSON.parse(event.data)\n      stocksData = data.stocksData\n      console.log('>stocksData>', stocksData);\n\n    }\n\n  };\n\n\n  return (\n    <div className=\"container\">\n      {console.log('aquiii', props)}\n      {stocksData.map(() => {\n        console.log('aqui')\n        return (\n          <Acao />\n        )\n      })\n      }\n    </div>\n  )\n}\n\n/*var socket = new WebSocket('ws://localhost:8080');\n// Show a connected message when the WebSocket is opened.\nsocket.onopen = function(event) {\n  socketStatus.innerHTML = 'Connected to: ' + event.currentTarget.url;\n  socketStatus.className = 'open';\n};*/","map":{"version":3,"sources":["/home/thary/Desktop/projetos/byne/front-end/src/components/Acoes.jsx"],"names":["React","Component","useState","Acao","Acoes","webSocket","WebSocket","stockData","setStockData","onmessage","event","console","log","JSON","parse","data","stocksData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,SAAS,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAlB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEAG,EAAAA,SAAS,CAACI,SAAV,GAAsB,UAAUC,KAAV,EAAiB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,IAAjB,CAAlB;AACA,QAAIA,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,IAAjB,CAAX;AACAP,IAAAA,YAAY,CAACO,IAAI,CAACC,UAAN,CAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BI,UAA5B;AAED,GAND;AAQD;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;AAkBG,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWH;;AAED,eAAeZ,KAAf;AACA","sourcesContent":["import React, { Component, useState } from 'react'\nimport Acao from './Acao'\n\nfunction Acoes() {\n  const webSocket = new WebSocket('ws://localhost:8080');\n  const [stockData, setStockData] = useState([])\n\n  webSocket.onmessage = function (event) {\n    console.log('>>', JSON.parse(event.data));\n    var data = JSON.parse(event.data)\n    setStockData(data.stocksData)\n    console.log('>stocksData>', stocksData);\n\n  }\n\n /* constructor(props) {\n    const webSocket = new WebSocket('ws://localhost:8080');\n    webSocket.onmessage = function (event) {\n      console.log('>>', JSON.parse(event.data));\n      var data = JSON.parse(event.data)\n      /*this.stocksData = data.stocksData\n      console.log('>stocksData>', this.stocksData);\n\n    }\n    super(props);\n    this.state = {\n      stocksData: []\n    }\n  };*/\n\n\n /* componentDidMount() {\n    const webSocket = new WebSocket('ws://localhost:8080');\nconsole.log('this', this)\n    webSocket.onopen = function (event) {\n      console.log('WebSocket Client Connected');\n      console.log('webSocket', event)\n\n      webSocket.onmessage = function (event) {\n        console.log('>>', JSON.parse(event.data));\n        const data = JSON.parse(event.data)\n        this.setState({stockData: data.stocksData})\n        console.log('>stocksData>', this.stocksData);\n\n      }\n\n    };\n  }*/\n\n    return (\n      <div>\n        {/*this.stocksData && this.stocksData.map(stock => {\n          return (\n            <Acao />\n          )\n        })*/}\n      </div>\n\n    )\n  \n}\n\nexport default Acoes\n/*export default props => {\n  const webSocket = new WebSocket('ws://localhost:8080');\n  var stocksData = []\n  console.log('wss', webSocket)\n\n  webSocket.onopen = function (event) {\n    console.log('WebSocket Client Connected');\n    console.log('webSocket', event)\n\n    webSocket.onmessage = function (event) {\n      console.log('>>', JSON.parse(event.data));\n      const data = JSON.parse(event.data)\n      stocksData = data.stocksData\n      console.log('>stocksData>', stocksData);\n\n    }\n\n  };\n\n\n  return (\n    <div className=\"container\">\n      {console.log('aquiii', props)}\n      {stocksData.map(() => {\n        console.log('aqui')\n        return (\n          <Acao />\n        )\n      })\n      }\n    </div>\n  )\n}\n\n/*var socket = new WebSocket('ws://localhost:8080');\n// Show a connected message when the WebSocket is opened.\nsocket.onopen = function(event) {\n  socketStatus.innerHTML = 'Connected to: ' + event.currentTarget.url;\n  socketStatus.className = 'open';\n};*/"]},"metadata":{},"sourceType":"module"}